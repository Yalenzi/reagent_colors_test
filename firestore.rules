rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection rules
    match /users/{documentId} {
      // Allow authenticated users to create user documents
      // Check that the uid field in the document matches the authenticated user
      allow create: if request.auth != null && 
                    request.resource.data.uid == request.auth.uid;
      
      // Users can read their own user document by checking the uid field
      // Since document ID is now username_info, we check if the uid field matches the authenticated user
      allow read: if request.auth != null && 
                  resource.data.uid == request.auth.uid;
      
      // Allow anyone to check if a username document exists (for availability checks)
      // This is needed for registration to work
      allow read: if request.auth == null;
      
      // Users can update their own user document by checking the uid field
      allow update: if request.auth != null && 
                    resource.data.uid == request.auth.uid &&
                    request.resource.data.uid == request.auth.uid;
      
      // Users can delete their own user document by checking the uid field
      allow delete: if request.auth != null && 
                    resource.data.uid == request.auth.uid;
      
      // Allow username availability checks (collection queries) - needed for registration
      // This allows both authenticated and unauthenticated users to check username availability
      // Uses 'list' for collection queries with where clauses (e.g., where username == "xyz")
      allow list: if true;
    }
    
    // Test collection for debugging (can be removed in production)
    match /test/{document} {
      allow read, write: if true;
    }
  }
} 